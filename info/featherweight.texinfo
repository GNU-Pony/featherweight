\input texinfo   @c -*-texinfo-*-

@c %**start of header
@setfilename featherweight.info
@settitle featherweight
@afourpaper
@documentencoding UTF-8
@documentlanguage en
@finalout
@c %**end of header


@dircategory Internet
@direntry
* featherweight: (featherweight).    A news aggregator for the terminal
@end direntry


@copying
Copyright @copyright{} 2014 Mattias Andrée

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying

@ifnottex
@node Top
@top featherweight -- A news aggregator for the terminal
@insertcopying
@end ifnottex

@titlepage
@title featherweight
@subtitle A news aggregator for the terminal
@author by Mattias Andrée (maandree)

@page
@c @center `'
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents



@menu
* Overview::                        Brief overview of @command{featherweight}.
* Invoking::                        Invocation of @command{featherweight}.
* Environment::                     Environment variables used by @command{featherweight}.
* Interface::                       How to use @command{featherweight}.
* GNU Free Documentation License::  Copying and sharing this manual.
@end menu



@node Overview
@chapter Overview

@command{featherweight} is a simple news aggregator designed for the
terminal. @command{featherweight} is designed to pull down the latest
news in cron jobs. Due to it running as a cron job you are able to
display the number of new news in your shell prompt line (PS1), or in
a monitor program, and not have an application constantly open in the
background.



@node Invoking
@chapter Invoking

@command{featherweight} recognises four options:

@table @option
@item --update
Fetch the latests news.

@item --status
Print the number of unread news.

@item --repair
Attempt to repair errors in the feed database,
including (and limited to): unsynchronised total
of unread feed entries, unsynchronised number
of unread feed entries in a feed, that is,
feed entries marked as unread but not as existing.

@item --system
Causes @command{featherweight} to not be interactive.
@end table

@command{featherweight --update --system GROUP} is intended
to be used from a cron jobs to fetch news updates in
the background.

@command{featherweight --status --system GROUP} is intended
to be used by monitor programs.

@code{GROUP}, which is only recognised if @option{--update}
or @option{--status} (or both) is used. It cannot start with
a dash (`-'), and only one argument (or zero) is allowed.
It selects which news feeds are fetched, or inspected. If
it is omitted, all news feeds are fetched or inspected.

In your shell prompt you do probably not want to use
@command{featherweight --status --system}, because it is
a bit slow. @command{cat ~/.var/lib/featherweight/status}
is equivalent but faster, or more precisely:
   
@example
(exec 10<~/.var/lib/featherweight/feeds && flock -s 10 &&
 cat ~/.var/lib/featherweight/status &&
 flock -u 10 && exec 10<&-)
@end example

You also use
@example
flock -x ~/.var/lib/featherweight/feeds \
      -c 'cat ~/.var/lib/featherweight/status'
@end example
but that appears to be slower than the long version.

@command{featherweight --update} can be used to fetch the
latest news and then open the news reader.



@node Environment
@chapter Environment

@command{featherweight} recongises six environment variables:

@table @env
@item FEATHERWEIGHT_HTML
If this envrionment variable is set but not empty.
@command{featherweight} will use the commend described
by it for converting HTML to pony-readable format. The
environment variable follows the same rules as @env{PAGER},
including reading the content from standard input
(@file{/dev/stdin}) and printing the readable text to
standard output (@file{/dev/stdout}), with @command{html2text}
as the fallback. There is however no last-resort formatter.
Setting @env{FEATHERWEIGHT_HTML} to @command{cat} will
have the effect that the HTML is not converted to
pony-readable format.

@item HOME
Your home directory, @file{/.var/lib/featherweight} is appended
to this which makes the directory where information stored by
@command{featherweight} is located. This environment variable
is mandatory and is set up by your login program.

@item TERM
This environment variable is optional, but is set up by your
terminal. If and only if its value is `linux', @command{featherweight}
assumes that your are in the Linux VT and will only characters
supported in the Linux VT, and any character found in the feeds
or that is set by the user herself.

@item PAGER
This environment variable is optional. If it is set it is used
when reading news. If is parsed by @command{sh}, thus it must
be formatted as you when you use it in a POSIX-compliant, this
means that is can contain spaces, quote, @file{~} and such,
and can consists of multiple arguments. The command must read
the displayed content from standard input (@file{/dev/stdin}).
If this variable is not set, or if it is empty,
@command{featherweight} will use @command{less} or if not
available in @env{PATH}, the first of @command{more},
@command{most} and @command{pg}, that is. In the unlikely
event that no pagers is found, @command{featherweight} will
act as a dumb pager, namly to print everything to the terminal
and wait for the user to press @kbd{return}.

@item PATH
This environment variable is used when @env{PAGER} is not set
(or is empty) to located to fallback pager. It is also used
to find other programs used by @command{featherweight} and
perhaps to by does programs to find other programs.
@end table

If you want to use a proxy, you use set your environment
variables so that @command{wget} does that.
@inforef{Proxies,, wget}.



@node Interface
@chapter Interface

@command{featherweight}'s interface@footnote{What you get
when you run the command @command{featherweight} without
the @option{--system} flag.} has four parts:

@itemize @bullet{}
@item The feed tree
@item The news tree
@item The news reader
@item The editor
@end itemize

For most users the news reader will be the program
@command{less}. You can read more about this in
@ref{Environment}. @command{less} probably does
not require any introduction, however, to exit
@command{less} you press the @kbd{q}-key.

The editor, which is what you get if you press the
@kbd{e}-key on an editable node in one of trees,
is a very limited Emacs-like editor, pytagomacs
to be precise. The important part here is that it
is exited by pressing @kbd{C-x, C-c}
@footnote{@kbd{control+x} followed by @kbd{control+c}.},
and changes are applied with @kbd{C-x, C-s}.

The feed tree is the first thing you will see.
It is very similar to the news tree, which is what
you get when you open feed. These two trees are
navigated and edited with the keyboards:

@table @kbd
@item q
Exit @command{featherweight}.
@item tab
Return to the feed tree if you are in the news tree.
@item C-l
Redraw the screen.
@item plus
If in the feed tree. Create new folder or feed
subscription. This will open the editor, and
you will be asked to enter specify a title,
group and URL. Only the title is mandatory,
if the group is unspecified, the group will
be set to an empty string. If the URL is not
specified, a folder is created. You can only
use this when either the root or a folder
is marked.
@item d
Delete the marked node. You will be asked to
confirmation your action.
@item e
Edit the marked node. The root and branches
in the news tree cannot be edited.
@item r
If in the news tree, mark the marked node as
read. If the marked node is a branch, or is
the root, all nodes inside it are marked as
read.
@item R
If in the news tree, mark the marked node as
unread. If the marked node is a branch, or is
the root, all nodes inside it are marked as
unread.
@item u
Move the marked node up one step in its parent.
@item j
Move the marked node down one step in its parent.
@item U
Move the marked node to the position of its parent.
@item J
Move the marked node to the first position inside
the node below it.
@item space
Expand or collapes the marked node. If the root
is marked, all nodes are expanded or collapsed.
The root itself cannot be collapsed.
@item return
If the marked node is a feed, go the the news
tree and open the feed of the marked node.
If the marked node is a news article, read that
article. Otherwise, perform the same action as
with the @kbd{space} key.
@item up
Mark the node printed directly above the currently marked node.
@item down
Mark the node printed directly below the currently marked node.
@item C-up
Mark the previous node with the same parent,
or the parent if at the first one.
@item C-down
Mark the next node with the same parent, or the next node of
the nearest ancestor with a next node with the same parent.
@item C-left
Mark the root.
@item left
Mark the parent of the marked node.
@item right
Mark the first of the marked node, expand then marked node
if it is collapsed.
@item n
@itemx P
Mark the next unread leaf.
@item N
@itemx p
Mark the previous unread leaf.
@item 1
Change the colour of the marked node to red.
The root of the trees and the branches in the
news tree cannot be coloured.
@item 2
Change the colour of the marked node to green.
@item 3
Change the colour of the marked node to yellow.
@item 4
Change the colour of the marked node to blue.
@item 5
Change the colour of the marked node to magenta.
@item 6
Change the colour of the marked node to cyan.
@item 7
Change the colour of the marked node to white.
@item 8
Change the colour of the marked node to black.
@item 0
Change the colour of the marked node to the default colour.
@end table

If you are in an xterm-compatible terminal, you
can use the mouse to navigate the trees.



@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl.texinfo

@bye

